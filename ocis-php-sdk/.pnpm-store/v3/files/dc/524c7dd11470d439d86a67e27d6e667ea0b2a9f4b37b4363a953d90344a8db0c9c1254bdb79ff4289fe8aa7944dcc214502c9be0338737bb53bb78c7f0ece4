import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import PropTypes from 'prop-types';
import MenuItem from '@material-ui/core/MenuItem';
import Select from '@material-ui/core/Select';
import { IntlContext } from './IntlContainer';

var LocaleSelect =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(LocaleSelect, _React$PureComponent);

  function LocaleSelect() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, LocaleSelect);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LocaleSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (event) {
      var _this$context = _this.context,
          locale = _this$context.locale,
          setLocale = _this$context.setLocale;
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          afterChange = _this$props.afterChange;

      if (locale === event.target.value) {
        // Unchanged.
        return;
      }

      if (onChange) {
        onChange(event);
      }

      if (!event.defaultPrevented) {
        setLocale(event.target.value).then(function (locale) {
          if (afterChange) {
            afterChange(locale);
          }
        });
      }
    });

    return _this;
  }

  _createClass(LocaleSelect, [{
    key: "render",
    value: function render() {
      var _this$context2 = this.context,
          locale = _this$context2.locale,
          languages = _this$context2.languages;

      var _this$props2 = this.props,
          _onChange = _this$props2.onChange,
          _afterChange = _this$props2.afterChange,
          other = _objectWithoutProperties(_this$props2, ["onChange", "afterChange"]);

      return React.createElement(Select, _extends({
        value: locale,
        onChange: this.handleChange
      }, other), languages.map(function (language) {
        return React.createElement(MenuItem, {
          key: language.locale,
          value: language.locale
        }, language.nativeName);
      }));
    }
  }]);

  return LocaleSelect;
}(React.PureComponent);

_defineProperty(LocaleSelect, "contextType", IntlContext);

LocaleSelect.defaultProps = {
  displayEmpty: true
};
LocaleSelect.propTypes = undefined !== "production" ? {
  displayEmpty: PropTypes.bool,
  onChange: PropTypes.func,
  afterChange: PropTypes.func
} : {};
export default LocaleSelect;