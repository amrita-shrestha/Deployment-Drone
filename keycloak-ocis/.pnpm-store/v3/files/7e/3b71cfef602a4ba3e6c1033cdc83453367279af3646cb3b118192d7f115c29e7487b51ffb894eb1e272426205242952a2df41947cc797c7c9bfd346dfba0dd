{"version":3,"sources":["webpack://Glue/webpack/universalModuleDefinition","webpack://Glue/webpack/bootstrap","webpack://Glue/./src/glue.ts","webpack://Glue/./src/utils.ts","webpack://Glue/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","API_VERSION","Glue","_a","api","events","options","this","enabled","hidden","Array","from","version","Controller","_this","origin","handler","destructor","postMessage","type","data","Promise","resolve","reject","Error","message","v","glue","callbackId","String","callbackCounter","record","callbackTable","set","handleMessageEvent","event","source","handleMessage","callAction","action","args","__awaiter","replyMessage","console","debug","features","then","reply","delete","error","listeners","eventListenerTable","listeners_1","__values","listeners_1_1","next","done","_b","__read","id","once","listener","apply","__spread","size","Map","eventListenerCounter","addEventListener","state","visibilityState","_i","arguments","length","features_1","features_1_1","destroyed","destroy","sent","removeEventListener","clear","detach","has","listeners_2","listeners_2_1","dispatchableEvents","dispatchEvent","attach","glueWindow","getGlueParameter","URLSearchParams","location","hash","substr","setGlueParameter","url","hashParams","toString","queueMicroTask","queueMicrotask","callback","catch","e","setTimeout","__webpack_exports__","src_embed","enable","container","__assign","timeout","sandboxRestrictions","featurePolicy","src","URL","href","Set","frame","ownerDocument","document","createElement","add","controller","src_awaiter","retryTimer","clearTimeout","keys","onBeforeInit","beforeInitResolve","beforeInitReject","initOptions","err","ready","src_spread","removeChild","undefined","className","setAttribute","attributes","entries","forEach","src_read","onFrame","append","appendChild","contentWindow","reason","sourceWindow","parent","self","expectedOrigin","origins","includes","failed","timer","request","initData","readyData","onInit","result","e_1","onBeforeReady"],"mappings":"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","file":"glue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Glue\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Glue\"] = factory();\n\telse\n\t\troot[\"Glue\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/umd/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Copyright 2019 Kopano and its contributors\n *\n * Use of this source code is governed by a MIT license\n * that can be found in the LICENSE.txt file.\n *\n */\n\n'use strict';\n\nexport const API_VERSION = 0;\n\nexport interface IEmbeddOptions {\n\ttimeout?: number;\n\tretries?: number;\n\n\tclassName?: string;\n\tattributes?: {[key: string]: string};\n\tsandboxRestrictions?: string;\n\tfeaturePolicy?: string;\n\n\torigin?: string;\n\tmode?: string;\n\toptions?: {[key: string]: unknown};\n\n\tfeatures?: {[key: string]: (...args: unknown[]) => unknown};\n\tevents?: Array<string>;\n\n\tonFrame?: (frame: HTMLIFrameElement) => void;\n\tonBeforeInit?: (glue: Glue, cont: Promise<unknown>) => {[key: string]: unknown} | undefined; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n}\n\nexport interface IEnableOptions {\n\ttimeout?: number;\n\torigins?: Array<string>;\n\n\tfeatures?: {[key: string]: (...args: unknown[]) => unknown};\n\tevents?: Array<string>;\n\n\tonInit?: (glue: Glue, initData: IInitData) => void; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\tonBeforeReady?: (glue: Glue, readyData: IReadyData) => void; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n}\n\nexport interface IPayload {\n\tv: number;\n\tglue: boolean;\n\ttype: string;\n\tdata: unknown;\n\tcallbackId?: string;\n}\n\nexport interface IInitData {\n\tfeatures?: Array<string>;\n\tevents?: Set<string>;\n\tmode?: string;\n\toptions?: {[key: string]: unknown};\n\terror?: boolean;\n}\n\nexport interface ICallbackData {\n\tcallbackId: string;\n\tdata: unknown;\n\terror?: boolean;\n}\n\nexport interface IReadyData {\n\tready: boolean;\n\tdata?: unknown;\n\terror?: boolean;\n}\n\nexport interface ICallData {\n\taction: string;\n\targs?: Array<unknown>;\n}\n\nexport interface ICallbackRecord {\n\tresolve: (value?: unknown) => void;\n\treject: (reason?: unknown) => void;\n}\n\nexport interface IGlueEvent {\n\ttype: string;\n}\n\nexport interface IGlueEventData {\n\tevent: IGlueEvent;\n\targs?: Array<unknown>;\n}\n\nexport interface IGlueEventListenerRecord {\n\tlistener: (...args: unknown[]) => void;\n\toptions?: AddEventListenerOptions;\n}\n\nexport type API<T> = {\n\t[P in keyof T]?: T[P]\n}\n\n/**\n * Glue holds together glue applications and their API.\n */\nexport class Glue {\n\tpublic static version: string = __VERSION__;\n\n\tpublic readonly enabled: boolean = false;\n\tpublic readonly api: API<{[key: string]: (...args: unknown[]) => Promise<any>}> /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\tpublic readonly events: Array<string>;\n\tpublic readonly options: {[key: string]: unknown};\n\tpublic readonly mode?: string;\n\n\tpublic hidden = false; /* Default value, only used when the glue on the other has no support. */\n\n\tpublic dispatchEvent?: (event: IGlueEvent, ...args: unknown[]) => Promise<boolean>;\n\tpublic addEventListener?: (type: string, listener: (...args: unknown[]) => void, options?: AddEventListenerOptions) => void;\n\tpublic removeEventListener?: (type: string, listener: (...args: unknown[]) => void, options?: AddEventListenerOptions) => void;\n\tpublic destroy?: () => Promise<void>;\n\n\tpublic constructor(\n\t\t{\n\t\t\tapi,\n\t\t\tevents,\n\t\t\toptions,\n\t\t\tmode,\n\t\t}: {\n\t\t\tapi?: API<{[key: string]: (...args: unknown[]) => Promise<any>}>; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\t\tevents?: Set<string>;\n\t\t\tmode?: string;\n\t\t\toptions?: {[key: string]: unknown};\n\t\t}) {\n\t\tif (api === undefined) {\n\t\t\tapi = {} as API<{[key: string]: (...args: unknown[]) => Promise<any>}>; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\t}\n\t\tthis.api = api;\n\t\tthis.events = events ? Array.from(events) : [];\n\t\tthis.options = options ? options : {};\n\t\tthis.mode = mode;\n\t}\n}\n\n/**\n * Controller implements the internal Glue functionality.\n */\nexport class Controller {\n\tprivate origin: string;\n\n\tprivate callbackCounter: number;\n\tprivate callbackTable: Map<string, ICallbackRecord>;\n\tprivate eventListenerCounter: number;\n\tprivate eventListenerTable: Map<string, Map<string, IGlueEventListenerRecord>>;\n\n\tprivate handler?: (message: IPayload) => Promise<any>; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\tprivate destructor?: () => Promise<void>;\n\tprivate events?: Set<string>;\n\n\tprivate window?: Window;\n\tprivate destroyed?: boolean;\n\n\tpublic constructor(\n\t\t{\n\t\t\torigin,\n\t\t\thandler,\n\t\t\tdestructor,\n\t\t\tevents,\n\t\t}: {\n\t\t\torigin: string;\n\t\t\thandler?: (message: IPayload) => Promise<unknown>;\n\t\t\tdestructor?: () => Promise<void>;\n\t\t\tevents?: Set<string>;\n\t\t}) {\n\t\tthis.origin = origin ? origin : window.origin;\n\n\t\tthis.callbackCounter = 0;\n\t\tthis.callbackTable = new Map();\n\t\tthis.eventListenerCounter = 0;\n\t\tthis.eventListenerTable = new Map();\n\n\t\tthis.handler = handler;\n\t\tthis.destructor = destructor;\n\t\tthis.events = events;\n\n\t\twindow.addEventListener('message', this.handleMessageEvent, false);\n\t}\n\n\tpublic Glue({\n\t\tfeatures,\n\t\tevents,\n\t\toptions,\n\t\tmode,\n\t}: {\n\t\tfeatures?: Array<string>;\n\t\tevents?: Set<string>;\n\t\toptions?: {[key: string]: unknown};\n\t\tmode?: string;\n\t}): Glue {\n\t\tconst api = {} as API<{[key: string]: (...args: unknown[]) => Promise<any>}>; /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\n\t\tconst state = {\n\t\t\tvisibilityState: 'prerender',\n\t\t\tenabled: api !== undefined,\n\t\t};\n\n\t\tconst glue =  new Glue({\n\t\t\tapi,\n\t\t\tevents,\n\t\t\toptions,\n\t\t\tmode,\n\t\t});\n\n\t\tif (features) {\n\t\t\tfor (const action of features) {\n\t\t\t\tswitch (action) {\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// All the rest is call wrapper for API.\n\t\t\t\t\t\tapi[action] = (...args: unknown[]): Promise<any> => { /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\t\t\t\t\t\treturn this.callAction(action, args);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tObject.defineProperty(glue, 'enabled', {\n\t\t\tget: (): boolean => {\n\t\t\t\treturn state.enabled && !this.destroyed;\n\t\t\t},\n\t\t});\n\n\n\t\tglue.destroy = async (): Promise<void> => {\n\t\t\tif (this.destroyed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.destructor) {\n\t\t\t\tawait this.destructor();\n\t\t\t}\n\n\t\t\twindow.removeEventListener('message', this.handleMessageEvent, false);\n\n\t\t\tthis.destroyed = true;\n\t\t\tthis.eventListenerTable.clear();\n\t\t\tthis.callbackTable.clear();\n\t\t\tthis.detach();\n\t\t}\n\n\t\tconst addEventListener = (type: string, listener: (...args: unknown[]) => void, options?: EventListenerOptions): void => {\n\t\t\tif (this.destroyed) {\n\t\t\t\tthrow new Error('glue is destroyed');\n\t\t\t}\n\n\t\t\tif (!this.eventListenerTable.has(type)) {\n\t\t\t\tthis.eventListenerTable.set(type, new Map());\n\t\t\t}\n\t\t\tconst listeners = this.eventListenerTable.get(type) as Map<string, IGlueEventListenerRecord>;\n\t\t\tconst id = String(++this.eventListenerCounter);\n\t\t\tlisteners.set(id, {\n\t\t\t\tlistener,\n\t\t\t\toptions,\n\t\t\t});\n\t\t}\n\t\tif (events) {\n\t\t\tglue.addEventListener = addEventListener;\n\t\t\tglue.removeEventListener = (type: string, listener?: (...args: unknown[]) => void, options?: EventListenerOptions): void => {\n\t\t\t\tconst listeners = this.eventListenerTable.get(type);\n\t\t\t\tif (listeners) {\n\t\t\t\t\tif (listener) {\n\t\t\t\t\t\tfor (const [id, record] of listeners) {\n\t\t\t\t\t\t\tif (record.listener === listener) {\n\t\t\t\t\t\t\t\tif (!options && !record.options) {\n\t\t\t\t\t\t\t\t\tlisteners.delete(id);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (options && record.options) {\n\t\t\t\t\t\t\t\t\t// TODO(longsleep): What options shall we handle here?\n\t\t\t\t\t\t\t\t\tlisteners.delete(id);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.eventListenerTable.delete(type);\n\t\t\t\t\t}\n\t\t\t\t\tif (!listeners.size) {\n\t\t\t\t\t\tthis.eventListenerTable.delete(type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst dispatchableEvents = this.events;\n\t\tconst dispatchEvent = async (event: IGlueEvent, ...args: unknown[]): Promise<boolean> => {\n\t\t\tif (this.destroyed) {\n\t\t\t\tthrow new Error('glue is destroyed');\n\t\t\t}\n\t\t\tif (!dispatchableEvents || !dispatchableEvents.has(event.type)) {\n\t\t\t\tthrow new Error(`unknown event: ${event.type}`);\n\t\t\t}\n\n\t\t\tconst message: IGlueEventData = {\n\t\t\t\tevent,\n\t\t\t\targs,\n\t\t\t};\n\n\t\t\tawait this.postMessage('event.dispatch', message);\n\t\t\treturn true;\n\t\t};\n\t\tif (dispatchableEvents) {\n\t\t\tglue.dispatchEvent = dispatchEvent;\n\t\t}\n\n\t\tif (this.events && this.events.has('glue.visibilitychange')) {\n\t\t\t// NOTE(longsleep): visibilityState can be changed when .embed().\n\t\t\tObject.defineProperty(glue, 'hidden', {\n\t\t\t\tget: (): boolean => {\n\t\t\t\t\treturn state.visibilityState !== 'visible';\n\t\t\t\t},\n\t\t\t\tset: (value: boolean): void => {\n\t\t\t\t\tconst n = value ? 'hidden' : 'visible';\n\t\t\t\t\tif (n !== state.visibilityState) {\n\t\t\t\t\t\tstate.visibilityState = n;\n\t\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\t\ttype: 'glue.visibilitychange',\n\t\t\t\t\t\t}, state.visibilityState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (events && events.has('glue.visibilitychange')) {\n\t\t\t// NOTE(longsleep): visibilityState is readonly when .enable().\n\t\t\tObject.defineProperty(glue, 'hidden', {\n\t\t\t\tget: (): boolean => {\n\t\t\t\t\treturn state.visibilityState !== 'visible';\n\t\t\t\t},\n\t\t\t});\n\t\t\taddEventListener('glue.visibilitychange', ((event: unknown, value: unknown): void => {\n\t\t\t\tstate.visibilityState = String(value);\n\t\t\t}));\n\t\t}\n\n\t\treturn glue;\n\t}\n\n\tpublic attach(glueWindow: Window): void {\n\t\tif (this.destroyed) {\n\t\t\tthrow new Error('glue is destroyed');\n\t\t}\n\t\tif (this.window !== undefined) {\n\t\t\tthrow new Error('glue already attached');\n\t\t}\n\n\t\tthis.window = glueWindow;\n\t}\n\n\tpublic detach(): void {\n\t\tthis.window = undefined;\n\t}\n\n\tpublic postMessage = (type: string, data: unknown): Promise<any> => { /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.window === undefined) {\n\t\t\t\tthrow new Error('glue is not attached');\n\t\t\t}\n\n\t\t\tconst message: IPayload = {\n\t\t\t\tv: API_VERSION,\n\t\t\t\tglue: true,\n\t\t\t\ttype,\n\t\t\t\tdata,\n\t\t\t\tcallbackId: String(++this.callbackCounter),\n\t\t\t};\n\t\t\tconst record: ICallbackRecord = {\n\t\t\t\treject,\n\t\t\t\tresolve,\n\t\t\t};\n\t\t\tthis.callbackTable.set(message.callbackId as string, record);\n\t\t\tthis.window.postMessage(message, this.origin);\n\t\t});\n\t}\n\n\tprivate handleMessageEvent = (event: MessageEvent): void => {\n\t\tif (event.source !== this.window) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.origin !== this.origin) {\n\t\t\treturn;\n\t\t}\n\t\tconst message = event.data as IPayload;\n\t\tif (message.glue !== true || message.v === undefined || message.type === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (message.v > API_VERSION) {\n\t\t\tthrow new Error(`glue versions incompatible: ${message.v} != ${API_VERSION}`);\n\t\t}\n\n\t\tthis.handleMessage(message);\n\t}\n\n\tprivate callAction = async (action: string, args: unknown[]): Promise<unknown> => {\n\t\tconst message: ICallData = {\n\t\t\taction,\n\t\t\targs,\n\t\t};\n\t\treturn this.postMessage('call', message);\n\t}\n\n\tprivate replyMessage = (callbackId: string, data: unknown): void => {\n\t\tconst message: ICallbackData = {\n\t\t\tcallbackId,\n\t\t\tdata,\n\t\t}\n\t\tthis.postMessage('callback', message);\n\t}\n\n\tprivate handleMessage = (message: IPayload): void => {\n\t\tswitch (message.type) {\n\t\t\tcase 'init': {\n\t\t\t\tconst data = message.data as IInitData;\n\t\t\t\tif (!message.callbackId) {\n\t\t\t\t\tthrow new Error('glue init has no callbackId');\n\t\t\t\t}\n\n\t\t\t\tconsole.debug('glue initialized', data.features);\n\n\t\t\t\tif (!this.handler) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.handler(message).then((reply: IInitData) => {\n\t\t\t\t\tthis.replyMessage(message.callbackId as string, reply);\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'callback': {\n\t\t\t\tconst data = message.data as ICallbackData;\n\t\t\t\tif (!data.callbackId) {\n\t\t\t\t\tthrow new Error('glue callback has no callbackId');\n\t\t\t\t}\n\n\t\t\t\tconst record = this.callbackTable.get(data.callbackId)\n\t\t\t\tif (record) {\n\t\t\t\t\tthis.callbackTable.delete(data.callbackId);\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\trecord.reject(data.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trecord.resolve(data.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'call': {\n\t\t\t\tif (!message.callbackId) {\n\t\t\t\t\tthrow new Error('glue call has no callbackId');\n\t\t\t\t}\n\n\t\t\t\tif (this.handler) {\n\t\t\t\t\tthis.handler(message).then((reply: unknown) => {\n\t\t\t\t\t\tthis.replyMessage(message.callbackId as string, reply);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'event.dispatch': {\n\t\t\t\tconst data = message.data as IGlueEventData;\n\t\t\t\tif (!message.callbackId) {\n\t\t\t\t\tthrow new Error('glue event.dispatch has no callbackId');\n\t\t\t\t}\n\t\t\t\tif (!data.event) {\n\t\t\t\t\tthrow new Error('glue event.dispatch without event');\n\t\t\t\t}\n\n\t\t\t\tconst listeners = this.eventListenerTable.get(data.event.type);\n\t\t\t\tif (listeners) {\n\t\t\t\t\tconst args = data.args ? data.args : [];\n\t\t\t\t\tfor (const [id, record] of listeners) {\n\t\t\t\t\t\tif (record.options && record.options.once) {\n\t\t\t\t\t\t\tlisteners.delete(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecord.listener(data.event, ...args);\n\t\t\t\t\t}\n\t\t\t\t\tif (!listeners.size) {\n\t\t\t\t\t\tthis.eventListenerTable.delete(data.event.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.replyMessage(message.callbackId, null);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tif (this.handler) {\n\t\t\t\t\tthis.handler(message).then((reply: unknown) => {\n\t\t\t\t\t\tif (message.callbackId) {\n\t\t\t\t\t\t\tthis.replyMessage(message.callbackId, reply);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n","/*\n * Copyright 2019 Kopano and its contributors\n *\n * Use of this source code is governed by a MIT license\n * that can be found in the LICENSE.txt file.\n *\n */\n\nexport function getGlueParameter(name: string): string | null {\n\tconst hashParams = new URLSearchParams(window.location.hash.substr(1));\n\treturn hashParams.get(`glue-${name}`);\n}\n\nexport function setGlueParameter(url: URL, name: string, value: string): void {\n\tconst hashParams = new URLSearchParams(url.hash.substr(1));\n\thashParams.set(`glue-${name}`, value);\n\turl.hash = hashParams.toString();\n}\n\nexport const queueMicroTask = ((): Function => {\n\tif (typeof window.queueMicrotask !== 'function') {\n\t\treturn function(callback: () => void): void {\n\t\t\tPromise.resolve().then(callback).catch(e => setTimeout(() => {\n\t\t\t\tthrow e;\n\t\t\t}));\n\t\t};\n\t} else {\n\t\treturn window.queueMicrotask.bind(window);\n\t}\n})();\n","/*!\n * Copyright 2019 Kopano and its contributors\n *\n * Use of this source code is governed by a MIT license\n * that can be found in the LICENSE.txt file.\n *\n * @author   Kopano <https://kopano.com>\n * @license  MIT\n * @preserve\n */\n\nimport {\n\tGlue,\n\tController,\n\tICallData,\n\tIInitData,\n\tIEmbeddOptions,\n\tIEnableOptions,\n\tIPayload,\n\tIReadyData,\n} from './glue';\nimport {\n\tgetGlueParameter,\n\tqueueMicroTask,\n\tsetGlueParameter,\n} from './utils';\n\n/**\n * Embeds the provided url into the provided container by creating an iframe\n * which gets appended as child to the provided container.\n *\n * @param url URL of the app to be embedded with Glue.\n * @param container DOM node where the iframe element is appended as child.\n * @param options Embedded options.\n */\nasync function embed(url: string, container: Element, options?: IEmbeddOptions): Promise<Glue> {\n\tconst state: {\n\t\thidden: boolean;\n\n\t\tframe?: HTMLIFrameElement;\n\t\tglue?: Glue;\n\t\tbeforeInitResolve?: (value?: unknown) => void;\n\t\tbeforeInitReject?: (reason?: unknown) => void;\n\n\t\tretryTimer?: ReturnType<typeof setTimeout>;\n\t} = {\n\t\thidden: false,\n\t};\n\n\treturn new Promise((resolve, reject) => {\n\t\t// Add default option values and ensure options.\n\t\toptions = {\n\t\t\ttimeout: 5000,\n\t\t\tsandboxRestrictions: 'allow-forms allow-popups allow-popups-to-escape-sandbox allow-scripts allow-same-origin',\n\t\t\tfeaturePolicy: 'animations; autoplay; camera; encrypted-media; fullscreen; geolocation; microphone; speaker; vr',\n\t\t\t...options,\n\t\t}\n\n\t\tconst src = new URL(url, window.location.href);\n\t\tconst origin = options.origin ? options.origin : src.origin;\n\t\tconst features: {[key: string]: (...args: unknown[]) => unknown} = {\n\t\t\t...options.features,\n\t\t};\n\t\tconst events: Set<string> = options ? options.events ? new Set(options.events) : new Set() : new Set();\n\t\tconst mode = options.mode ? options.mode : '';\n\n\t\t// Create iframe.\n\t\tconst ownerDocument = container.ownerDocument !== null ? container.ownerDocument : document;\n\t\tconst frame = ownerDocument.createElement('iframe');\n\n\t\t// Add built in events.\n\t\tevents.add('glue.visibilitychange');\n\n\t\t// Create glue controller.\n\t\tconst controller = new Controller({\n\t\t\torigin,\n\t\t\thandler: async (message: IPayload): Promise<any> => { /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'init': {\n\t\t\t\t\t\tif (state.retryTimer) {\n\t\t\t\t\t\t\tclearTimeout(state.retryTimer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst data = message.data as IInitData;\n\t\t\t\t\t\tstate.glue = controller.Glue({\n\t\t\t\t\t\t\tfeatures: data.features,\n\t\t\t\t\t\t\tevents: data.events,\n\t\t\t\t\t\t\tmode,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Add provided features.\n\t\t\t\t\t\tconst reply: IInitData = {\n\t\t\t\t\t\t\tfeatures: features ? Object.keys(features) : [],\n\t\t\t\t\t\t\tevents,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// The onBeforeInit hook allows to define or modify options for the glued app.\n\t\t\t\t\t\tif (options && options.onBeforeInit) {\n\t\t\t\t\t\t\tconst p = new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\tstate.beforeInitResolve = resolve;\n\t\t\t\t\t\t\t\tstate.beforeInitReject = reject;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!state.beforeInitResolve || !state.beforeInitReject) {\n\t\t\t\t\t\t\t\tthrow new Error('glue init promise error');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst initOptions = options.onBeforeInit(state.glue, p);\n\t\t\t\t\t\t\t\tif (initOptions) {\n\t\t\t\t\t\t\t\t\treply.options = {\n\t\t\t\t\t\t\t\t\t\t...initOptions\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\treject(new Error(`onInit failed: ${err}`));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!reply.options) {\n\t\t\t\t\t\t\t// Ensure options are set, when not set already.\n\t\t\t\t\t\t\treply.options = {\n\t\t\t\t\t\t\t\t...options ? options.options : {},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (reply.options.hidden !== undefined) {\n\t\t\t\t\t\t\t// This allows to set the initial visibility state. At the same time the\n\t\t\t\t\t\t\t// value is shared early with the glued app.\n\t\t\t\t\t\t\tstate.hidden = !!reply.options.hidden;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treply.options.hidden = state.hidden;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn reply;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'ready': {\n\t\t\t\t\t\tif (!state.glue) {\n\t\t\t\t\t\t\tthrow new Error('failed to glue: no state');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst data = message.data as IReadyData;\n\t\t\t\t\t\tif (options && options.onBeforeInit && state.beforeInitResolve && state.beforeInitReject) {\n\t\t\t\t\t\t\tif (data.ready) {\n\t\t\t\t\t\t\t\tawait state.beforeInitResolve(data.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tawait state.beforeInitReject(data.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete state.beforeInitResolve;\n\t\t\t\t\t\t\tdelete state.beforeInitReject;\n\t\t\t\t\t\t\tresolve(state.glue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (data.ready) {\n\t\t\t\t\t\t\t\tresolve(state.glue);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\t\t\t\tthrow new Error(`failed to glue: ${data.data}`)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treject(state.glue);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'call': {\n\t\t\t\t\t\tconst data = message.data as ICallData;\n\t\t\t\t\t\tconst handler = features ? features[data.action] : null;\n\t\t\t\t\t\tif (!handler) {\n\t\t\t\t\t\t\tthrow new Error(`unknown action: ${data.action}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst args = data.args ? data.args : [];\n\t\t\t\t\t\treturn handler(...args);\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.debug(`glue (embed) unknown message type: ${message.type}`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestructor: async (): Promise<void> => {\n\t\t\t\tif (state.frame && state.frame === frame) {\n\t\t\t\t\tcontainer.removeChild(frame);\n\t\t\t\t\tstate.frame = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tevents,\n\t\t});\n\n\t\t// Add iframe details.\n\t\tif (options && options.className) {\n\t\t\tframe.className = options.className;\n\t\t}\n\t\tif (options.sandboxRestrictions) {\n\t\t\tframe.setAttribute('sandbox', options.sandboxRestrictions);\n\t\t}\n\t\tif (options.featurePolicy) {\n\t\t\tframe.setAttribute('allow', options.featurePolicy);\n\t\t}\n\t\tif (options && options.attributes) {\n\t\t\tObject.entries(options.attributes).forEach(([key, value]) => {\n\t\t\t\tframe.setAttribute(key, value);\n\t\t\t});\n\t\t}\n\t\tstate.frame = frame;\n\n\t\t// Prepare URL and set it to element.\n\t\tsetGlueParameter(src, 'mode', mode);\n\t\tif (origin !== window.origin) {\n\t\t\t// Cross origin, add glue origin hash parameter to allow white list\n\t\t\t// checks on the other end.\n\t\t\tsetGlueParameter(src, 'origin', window.origin);\n\t\t}\n\n\t\tif (options && options.onFrame) {\n\t\t\toptions.onFrame(frame);\n\t\t}\n\n\t\t// Append iframe with timeout and retry.\n\t\tconst append = (): void => {\n\t\t\tif (frame !== state.frame) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tframe.setAttribute('src', src.toString());\n\n\t\t\t// Inject iframe and attach glue.\n\t\t\tcontainer.appendChild(frame);\n\t\t\tif (!frame.contentWindow) {\n\t\t\t\tthrow new Error('new frame has no contentWindow');\n\t\t\t}\n\t\t\tcontroller.attach(frame.contentWindow);\n\t\t}\n\t\tconst retry = (): void => {\n\t\t\tif (frame !== state.frame) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.detach();\n\t\t\tcontainer.removeChild(frame);\n\t\t\tsetTimeout(() => {\n\t\t\t\tappend();\n\t\t\t}, 1000); // NOTE(longsleep): Retry time hardcoded - is it needed to have a configuration?\n\t\t}\n\t\tframe.addEventListener('load', () => {\n\t\t\tif (options) {\n\t\t\t\tif (options.timeout) {\n\t\t\t\t\tif (state.retryTimer) {\n\t\t\t\t\t\tclearTimeout(state.retryTimer);\n\t\t\t\t\t}\n\t\t\t\t\tstate.retryTimer = setTimeout(() => {\n\t\t\t\t\t\t// NOTE(longsleep): This does not detect when a reload fails.\n\t\t\t\t\t\tif (!state.glue) {\n\t\t\t\t\t\t\tretry();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, options.timeout);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tappend();\n\t}).then((value: unknown): Glue => {\n\t\t// Trigger final visibility state and return Glue.\n\t\tconst glue = value as Glue;\n\t\tglue.hidden = state.hidden;\n\t\treturn glue;\n\t}).catch(async reason => {\n\t\tif (state.glue && state.glue.destroy) {\n\t\t\tawait state.glue.destroy();\n\t\t} else {\n\t\t\tif (state.frame) {\n\t\t\t\tcontainer.removeChild(state.frame);\n\t\t\t\tstate.frame = undefined;\n\t\t\t}\n\t\t}\n\t\tthrow reason;\n\t});\n}\n\n/**\n * Enables glue for the provided sourceWindow with options.\n *\n * @param sourceWindow Window element of the app which is using Glue embed.\n * @param options Enable options.\n */\nasync function enable(sourceWindow?: Window, options?: IEnableOptions): Promise<Glue> {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!sourceWindow) {\n\t\t\tsourceWindow = window.parent;\n\t\t}\n\n\t\t// Get glue mode.\n\t\tconst mode = getGlueParameter('mode');\n\n\t\tif (sourceWindow === self || mode === null) {\n\t\t\t// Return empty Glue API if we are self, or glue mode is not set. It\n\t\t\t// this means Glue is not active.\n\t\t\tresolve(new Glue({}));\n\t\t\treturn;\n\t\t}\n\n\t\t// Add default option values and ensure options.\n\t\toptions = {\n\t\t\ttimeout: 5000,\n\t\t\t...options,\n\t\t};\n\n\t\t// Validate origin.\n\t\tconst expectedOrigin = getGlueParameter('origin');\n\t\tif (expectedOrigin) {\n\t\t\tif (expectedOrigin !== window.origin) {\n\t\t\t\t// Validate white list if cross origin.\n\t\t\t\tif (options && options.origins) {\n\t\t\t\t\tif (options.origins.includes(expectedOrigin) || options.origins.includes('*')) {\n\t\t\t\t\t\t// ok\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('glue origin is not allowed');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Create glue controller.\n\t\tconst features: {[key: string]: (...args: unknown[]) => unknown} = {\n\t\t\t...options.features,\n\t\t};\n\t\tconst events = options ? options.events ? new Set(options.events): undefined : undefined;\n\t\tconst controller = new Controller({\n\t\t\torigin: expectedOrigin ? expectedOrigin : window.origin,\n\t\t\thandler: async (message: IPayload): Promise<any> => { /* eslint-disable-line @typescript-eslint/no-explicit-any */\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'call': {\n\t\t\t\t\t\tconst data = message.data as ICallData;\n\t\t\t\t\t\tconst handler = features ? features[data.action] : null;\n\t\t\t\t\t\tif (!handler) {\n\t\t\t\t\t\t\tthrow new Error(`unknown action: ${data.action}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst args = data.args ? data.args : [];\n\t\t\t\t\t\treturn handler(...args);\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.debug(`glue (enable) unknown message type: ${message.type}`)\n\t\t\t\t}\n\t\t\t},\n\t\t\tevents,\n\t\t});\n\n\t\t// Attach glue.\n\t\tcontroller.attach(sourceWindow);\n\n\t\t// Start timeout.\n\t\tlet failed = false;\n\t\tconst timer = setTimeout(() => {\n\t\t\tfailed = true;\n\t\t\treject(new Error('glue timeout'));\n\t\t}, options.timeout);\n\n\t\t// Start initialization.\n\t\tqueueMicroTask(() => {\n\t\t\tconst request: IInitData = {\n\t\t\t\tfeatures: features ? Object.keys(features) : [],\n\t\t\t\tevents: events ? new Set(events) : undefined,\n\t\t\t\tmode,\n\t\t\t}\n\t\t\tcontroller.postMessage('init', request).then(async (initData?: IInitData): Promise<void> => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tif (failed) {\n\t\t\t\t\t// Do nothing when flagged failed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!initData || initData.error) {\n\t\t\t\t\t// TODO(longsleep): Initialization failed. What now?\n\t\t\t\t\treject(new Error(`glue init received error: ${initData ? initData.error : 'no data'}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst readyData: IReadyData = {\n\t\t\t\t\tready: true,\n\t\t\t\t}\n\n\t\t\t\t// Create glue.\n\t\t\t\tconst glue = controller.Glue({\n\t\t\t\t\tfeatures: initData.features,\n\t\t\t\t\tevents: initData.events,\n\t\t\t\t\toptions: initData.options,\n\t\t\t\t\tmode,\n\t\t\t\t});\n\n\t\t\t\t// Trigger onInit hook.\n\t\t\t\tif (options && options.onInit) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\toptions.onInit(glue, initData);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\treadyData.ready = false;\n\t\t\t\t\t\treadyData.error = true;\n\t\t\t\t\t\treadyData.data = e;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst initOptions = initData.options ? initData.options : {};\n\n\t\t\t\t// Trigger initial requested action.\n\t\t\t\tif (readyData.ready && initOptions.action) {\n\t\t\t\t\t// Trigger action, this action is set when initializing and it\n\t\t\t\t\t// is triggered before the app reports ready.\n\t\t\t\t\tif (features && features[initOptions.action as string])  {\n\t\t\t\t\t\tconst handler = features[initOptions.action as string];\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst result = await handler();\n\t\t\t\t\t\t\tif (result !== undefined) {\n\t\t\t\t\t\t\t\treadyData.data = result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\treadyData.ready = false;\n\t\t\t\t\t\t\treadyData.error = true;\n\t\t\t\t\t\t\treadyData.data = e;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treadyData.ready = false;\n\t\t\t\t\t\treadyData.error = true;\n\t\t\t\t\t\treadyData.data = new Error(`unknown glue action: ${initOptions.action}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Trigger beforeReady hook.\n\t\t\t\tif (options && options.onBeforeReady) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\toptions.onBeforeReady(glue, readyData);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\treadyData.ready = false;\n\t\t\t\t\t\treadyData.error = true;\n\t\t\t\t\t\treadyData.data = e;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Reply with redy result.\n\t\t\t\tcontroller.postMessage('ready', readyData).then((): void => {\n\t\t\t\t\tresolve(glue);\n\t\t\t\t});\n\t\t\t}).catch((reason: unknown)=> {\n\t\t\t\tthrow new Error(`glue init failed: ${reason}`);\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport {\n\tGlue,\n\tController,\n\tembed,\n\tenable,\n}\n\nexport default Glue;\n"],"sourceRoot":""}